message("getting cached data")
return(m)
}
data <- x$get()
m <- solve(data, ...)
x$setinverse(m)
m
}
set.seed(1110201)
r = rnorm(1000000)
mat1 = matrix(r, nrow=1000, ncol=1000)
test(mat1)
m
source('F:/Coding/Coursera/ProgrammingAssignment2/cachematrix.R')
set.seed(1)
rpois(5, 2)
?rnorm
?set.seed
set.seed(10)
x <- rep(0:1, each = 5)
e <- rnorm(10, 0, 20)
y <- 0.5 + 2 * x + e
x
y
e
library(swirl)
swirl()
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4,5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matric <- my_vector
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20, 4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
?colnames
colnames(my_data) <- cnames
my_data
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(pants, 10)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
LETTERS
sample(LETTERS)
sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob =0.7)
rbinom(100, size = 1, prob =0.7)
flips2 <- rbinom(100, size = 1, prob =0.7)
flips2
sum(flips2)
?rnorm
exit
exit()
info()
bye()
swirl()
library(swirl)
swirl()
rnorm(10)
rnorm(10, 100, 25)
?rpois
rpois(5, 10)
my_pois <- replicate(100, rpois(5, 10))
my_pois
cm <- colmeans(my_pois)
cm <- colMeans(my_pois)
hist(cm)
download.file() f
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "GandCData.csv")
thedata <- read.csv("GandCData.csv")
head(thedata)
sum(thedata$val > 1e6)
1e6
sum(thedata$VAL)
sum(thedata$val == 24)
sum(thedata$val == 14)
sum(thedata[val] == 14)
sum(thedata[[val]] == 14)
sum(thedata[["VAL"]] == 14)
sum(thedata["VAL"] == 14)
thedata
library(plyr)
?sum
thedata$val
thedata$VAL
sum(thedata$VAL == 24)
sum(thedata$VAL = 24)
sum(thedata$VAL > 23)
sum(thedata$VAL > 23, na.rm = TRUE)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "gotdata.xls")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "gotdata.csv")
?read.table
?fread
?data.table
library(data.table)
install.packages("data.table")
library(data.table)
?fread
dat <- fread("gotdata.csv", skip = 17, nrows = 6, select = 7:15)
dat <- fread("gotdata.xls", skip = 17, nrows = 6, select = 7:15)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "gotdata.xlsx")
?download.file
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "gotdata.xlsx", mode = "wb")
dat <- fread("gotdata.xlsx", skip = 17, nrows = 6, select = 7:15)
dat <- fread("gotdata.xlsx", skip = 17, nrows = 6, select = 7:15)
?close
close("gotdata.xlsx")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NGAP.xlsx", mode = "wb")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FDATA.gov_NGAP.xlsx", "NGAP.csv", mode = "wb")
install.packages(xlsx)
install.packages("xlsx")
dat <- read.xlsx("NGAP.xlsx", rowindex = [18:23], colindex = [7:15])
dat <- read.xlsx("NGAP.xlsx", rowindex = 18:23, colindex = 7:15)
library(xlsx)
install.packages("rJava")
library(xlsx)
dat <- read.xlsx("NGAP.xlsx", rowindex = 18:23, colindex = 7:15)
dat <- read.xlsx("NGAP.xlsx", sheetindex = 1, rowindex = 18:23, colindex = 7:15)
dat <- read.xlsx("NGAP.xlsx", sheetIndex = 1, rowIndex = 18:23, colIndex = 7:15)
dat
sum(dat$Zip*dat$Ext,na.rm=T)
dat <- read.xlsx("NGAP.xlsx", sheetIndex = 1, rowIndex = 18:24, colIndex = 7:15)
sum(dat$Zip*dat$Ext,na.rm=T)
dat
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Frestaurants.xml", "FR.xml")
install.packages("XML")
library(xml)
library(XML)
doc <- xmlTreeParse("FR.xml", useInternal = TRUE)
doc
rootNode <- xmlRoot(doc)
zipCount <- xmlSApply(rootNode, "//zipcode", xmlValue)
zipCount <- xpathSApply(rootNode, "//zipcode", xmlValue)
zipcount
zipCount
sum(zipCount = "21231")
sum(zipCount = 21231)
sum(zipCount == "21231")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "pid.csv")
DT <- fread("pid.csv")
library(data.table)
DT <- fread("pid.csv")
?system.time
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(rowMeans(DT)[DT$SEX==1]
)
system.time(rowMeans(DT)[DT$SEX==1])
system.time(tapply(DT$pwgtp15,DT$SEX,mean)
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15))
install.packages("RMySQL")
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
source('F:/Coding/Coursera/ProgrammingAssignment4.R')
acs <- read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
head(acs)
library(XML)
url <- "http://biostat.jhsph.edu/~jleek/contact.html"
html <- htmlTreeParse(url, useInternalNodes = T)
?nchar
html
html[ <- readLines[15]
html[15]
con = url("http://biostat.jhsph.edu/~jleek/contact.html")
htmlCode = readLines(con)
close(con)
htmlCode[10]
nchar(htmlCode[10])
nchar(htmlCode[20])
nchar(htmlCode[30])
nchar(htmlCode[100])
forg <- read.fwf("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for", 13)
?colSum
head(forg)
forg
forg <- read.fwf(
file=url("http://www.cpc.ncep.noaa.gov/data/indices/wksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
head(forg)
?colSums
?colSum
colSums(forg)
colSums(forg[4])
colSums(forg[0])
colSums(forg[1])
colSums(forg[9])
colSums(forg[4])
forg <- read.fwf(
file=url("https://d396qusza40orc.cloudfront.net/getdata%2Fwksst8110.for"),
skip=4,
widths=c(12, 7, 4, 9, 4, 9, 4, 9, 4))
colSums(forg[4])
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "Week3Quiz.csv")
aCommSur <- read.csv("Week3Quiz.csv")
head(aCommSu)
head(aCommSur)
?which
?transform
?subset
agricultureLogical <- transform(aCommSur, aCommSur$ACR == 3 && aCommSur$VAL >= 2)
head(agricultureLogical)
install.packages(plyr)
install.packages("plyr")
library(plyr)
library(dplyr)
install.packages("dplyr")
library(dplyr)
agricultureLogical <- transform(aCommSur, satis = (aCommSur$ACR == 3 && aCommSur$VAL >= 2))
head(agricultureLogical)
which(agricultureLogical$satis)
which(agricultureLogical)
which(agricultureLogical[[satis]])
which(agricultureLogical[satis])
?which
agricultureLogical = (aCommSur$ACR == 3 && aCommSur$VAL >= 02)
head(agricultureLogical)
agricultureLogical
head(aCommSur)
agricultureLogical <- (aCommSur$ACR == 3 && aCommSur$VAL >= 02)
head(agricultureLogical)
agricultureLogical <- aCommSur$ACR == 3 && aCommSur$VAL >= 02
head(agricultureLogical)
agricultureLogical
aCommSur$ACR == 3
aCommSur$ACR == 3 && aCommSur$VAL >= 02
aCommSur$ACR == 3 && aCommSur$VAL >= "02"
aCommSur$ACR == 3 & aCommSur$VAL >= "02"
agricultureLogical <- aCommSur$ACR == 3 & aCommSur$VAL >= "02"
head(agricultureLogical)
which(agricultureLogical)
agricultureLogical <- aCommSur$ACR == 3 & aCommSur$AGS == 6
which(agricultureLogical)
install.packages("jpeg")
library(jpeg)
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
#this will display your image to test you read it correctly
if(exists("rasterImage")){
plot(1:2, type='n')
rasterImage(img,1,1,2,2)
}
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "img.jpg")
img <- readJPEG("img.jpg", native = TRUE)
#this will display your image to test you read it correctly
if(exists("rasterImage")){
plot(1:2, type='n')
rasterImage(img,1,1,2,2)
}
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", "img.jpg")
img <- readJPEG("https://d396qusza40orc.cloudfront.net/getdata%2Fjeff.jpg", native = TRUE)
#this will display your image to test you read it correctly
if(exists("rasterImage")){
plot(1:2, type='n')
rasterImage(img,1,1,2,2)
}
img <- readJPEG("img.jpg", native = TRUE)
#this will display your image to test you read it correctly
if(exists("rasterImage")){
plot(1:2, type='n')
rasterImage(img,1,1,2,2)
}
?quantile
quantile(img, probs=c(0.3,0.8))
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "FGDP.csv")
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "Fedstats.csv")
fgdp <- read.csv("FGDP.csv")
fedStats <- read.csv(Fedstats.csv)
fedStats <- read.csv("Fedstats.csv")
head(fgdp)
fgdp$X
together <- inner_join(fgdp, fedStats, by = "X")
head(fedStats)
rename(fedStats, CountryCode = X)
rename(fedStats, CountryCode = "X")
head(fgdp)
names(fgdp)
?rename
rename(fgdp, X = CountryCode)
rename(fgdp, CountryCode = X)
head(fgdp)
dplyr::rename(fgdp, CountryCode = X)
head(fgdp)
together <- inner_join(fgdp, fedStats, by = c("X", "CountryCode"))
together <- inner_join(fgdp, fedStats, by = c("X" = "CountryCode"))
head(together)
length(together)
together[15]
together[13,]
str(together)
View(fedStats)
View(fedStats)
View(together)
View(fgdp)
View(together)
?quantile
View(together)
View(together)
View(fedStats)
together <- merge(fgdp, fedStats, by.x = "X", by.Y = "CountryCode")
together <- merge(fgdp, fedStats, by.x = X, by.Y = CountryCode)
together <- merge(fgdp, fedStats, by.x = "X", by.Y = "CountryCode", all = TRUE)
library(plyr)
library(dplyr)
together <- merge(fgdp, fedStats, by.x = "X", by.Y = "CountryCode", all = TRUE)
together <- merge(fgdp, fedStats, by.x = "X", by.y = "CountryCode", all = TRUE)
View(together)
?arrange
arrange(together, desc("Gross.domestic.product.2012"))
View(fgdp)
together <- merge(fgdp, fedStats, by.x = "X", by.y = "CountryCode", all = FALSE)
View(together)
arrange(together, desc(Gross.domestic.product.2012))
View(together)
together2 <- arrange(together, desc(Gross.domestic.product.2012))
View(together2)
together2 <- arrange(together, desc(as.number(Gross.domestic.product.2012)))
together2 <- arrange(together, desc(as.numeric(Gross.domestic.product.2012)))
head(together2, 15)
together2[13,]
View(fedStats)
View(fedStats)
View(fedStats)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06hid.csv", "fsshid.csv")
df <- read.csv("fsshid.csv")
names(df)
?strsplit
nlist <- strsplit(names(df), split = "wgtp")
nlist[123]
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FGDP.csv", "fdata.csv")
fdata <- read.csv("fdata.csv")
head(fdata)
?gsub
x3 <- gsub(",","",fdata$X.3)
head(x3)
x32 <- x3[4,]
x32 <- x3[4:]
x32 <- x3[4: ]
x32 <- x3[4:,]
x3(4)
x3[5]
x3[5:10]
x3[5:]
x3[5: ]
length(x3)
x4 <- x[5:330]
x4 <- x3[5:330]
?avg
?mean
mean(x4)
mean(as.numeric(x4))
mean(as.numeric(x4), na.rm = TRUE)
x4 <- as.numeric(x3[5:330])
supressWarnings()
suppressWarnings()
?supressWarnings
?suppressWarnings
x4 <- as.numeric(x3[5:330], na.rm = TRUE)
View(fdata)
View(fdata)
x4 <- x3[5:194]
mean(as.numeric(x4))
?grep
grep("^United", fdata$X.2)
download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2FEDSTATS_Country.csv", "fedstat.csv")
fstat <- read.csv("fedstat.csv")
?colnames
View(fstat)
names(fstat)
colnames(fdata) <- c("Short.Name", "GDP", "X.1")
names(fdata)
?merge
together <- merge(fdata, fstat, by.x = "Short.Name", by.y = "Short.Name")
together <- merge(fdata, fstat, by.x = "Short.Name", by.y = "Short.Name", all = TRUE)
together <- merge(fdata[, 1:3], fstat, by.x = "Short.Name", by.y = "Short.Name", all = TRUE)
head(together)
View(together)
colnames(fdata) <- c("CountryCode", "GDP", "X.1")
together <- merge(fdata[, 1:3], fstat, by.x = "CountryCode", by.y = "CountryCode", all = TRUE)
?grep
fyendjune <- grep("june", together$Special.Notes, ignore.case = TRUE)
length(fyendjune)
fyendjune <- grep(" june", together$Special.Notes, ignore.case = TRUE)
length(fyendjune)
install.packages("quantmod")
library(quantmod)
amzn = getSymbols("AMZN",auto.assign=FALSE)
sampleTimes = index(amzn)
head(sampleTimes)
y2012 <- grep("2012", sampleTimes)
length(y2012)
setwd("F:/Coding/Coursera/R/ExData_Plotting1")
? read.table
?scan
?unz
getwd()
setwd("F:/Coding/Coursera/R")
temp <- read.table("household_popwer_consumption.txt", sep = ";")
temp <- read.table("household_power_consumption.txt", sep = ";")
View(temp)
View(temp)
setwd("F:/Coding/Coursera/R/ExData_Plotting1")
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
unz(zipFileName, filename)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
View(temp)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
?close
View(temp)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
View(df)
View(df)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
names(df)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
?close
isOpen()
showConnections
?closeAllConnections
closeAllConnections()
showConnections()
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
names(df)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
View(dfNames)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
View(df)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
View(df)
?strp.time
?strptime
View(dfNames)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
hist(df, col = "red")
hist(df$Global_active_power, col = "red")
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot1.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
?plot
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
?lines
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
class(df)
class(df$Date)
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
source('F:/Coding/Coursera/R/ExData_Plotting1/plot2.R')
